<!DOCTYPE html>
<html class="docs" lang="en-US"><head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>SmartMenus jQuery Website Menu Plugin » Docs</title>

<link rel="stylesheet" href="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/style.css" type="text/css" media="all">
<link rel="alternate" type="application/rss+xml" title="SmartMenus jQuery Website Menu Plugin RSS Feed" href="http://feeds.feedburner.com/SmartMenus">
<link rel="pingback" href="http://www.smartmenus.org/xmlrpc.php">
<link href="http://www.smartmenus.org/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon">

<script src="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/analytics.js" async=""></script><script type="text/javascript">
/* <![CDATA[ */
var template_dir = 'http://www.smartmenus.org/wp-content/themes/smartmenus';
/* ]]> */
</script>
<script type="text/javascript" src="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/jquery.js"></script>
<script type="text/javascript" src="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/common.js"></script>
</head>
<body class="docs js">
<script type="text/javascript">
/* <![CDATA[ */
$('body').addClass('js');
/* ]]> */
</script>

<div id="holder">



  <p class="hide"><a href="#content">Skip to Content</a></p>

  <h2 class="hide">Docs navigation</h2>

  <div id="docs-nav">
   <ul data-smartmenus-id="14444104713148394" id="docs-menu" class="sm sm-vertical"><li id="menu-item-525"><a href="#quick-setup">Quick setup</a></li>
<li id="menu-item-526"><a class="has-submenu" href="#options"><span class="sub-arrow">+</span>Options</a>
<ul class="sub-menu">
	<li id="menu-item-559"><a href="#bottomToTopSubMenus">bottomToTopSubMenus</a></li>
	<li id="menu-item-550"><a href="#collapsibleHideDuration">collapsibleHideDuration</a></li>
	<li id="menu-item-551"><a href="#collapsibleHideFunction">collapsibleHideFunction</a></li>
	<li id="menu-item-548"><a href="#collapsibleShowDuration">collapsibleShowDuration</a></li>
	<li id="menu-item-549"><a href="#collapsibleShowFunction">collapsibleShowFunction</a></li>
	<li id="menu-item-546"><a href="#hideDuration">hideDuration</a></li>
	<li id="menu-item-547"><a href="#hideFunction">hideFunction</a></li>
	<li id="menu-item-553"><a href="#hideOnClick">hideOnClick</a></li>
	<li id="menu-item-543"><a href="#hideTimeout">hideTimeout</a></li>
	<li id="menu-item-529"><a href="#isPopup">isPopup</a></li>
	<li id="menu-item-555"><a href="#keepHighlighted">keepHighlighted</a></li>
	<li id="menu-item-554"><a href="#keepInViewport">keepInViewport</a></li>
	<li id="menu-item-530"><a href="#mainMenuSubOffsetX">mainMenuSubOffsetX</a></li>
	<li id="menu-item-531"><a href="#mainMenuSubOffsetY">mainMenuSubOffsetY</a></li>
	<li id="menu-item-556"><a href="#markCurrentItem">markCurrentItem</a></li>
	<li id="menu-item-557"><a href="#markCurrentTree">markCurrentTree</a></li>
	<li id="menu-item-560"><a href="#overlapControlsInIE">overlapControlsInIE</a></li>
	<li id="menu-item-558"><a href="#rightToLeftSubMenus">rightToLeftSubMenus</a></li>
	<li id="menu-item-541"><a href="#scrollAccelerate">scrollAccelerate</a></li>
	<li id="menu-item-540"><a href="#scrollInterval">scrollInterval</a></li>
	<li id="menu-item-539"><a href="#scrollStep">scrollStep</a></li>
	<li id="menu-item-544"><a href="#showDuration">showDuration</a></li>
	<li id="menu-item-545"><a href="#showFunction">showFunction</a></li>
	<li id="menu-item-552"><a href="#showOnClick">showOnClick</a></li>
	<li id="menu-item-542"><a href="#showTimeout">showTimeout</a></li>
	<li id="menu-item-536"><a href="#subIndicators">subIndicators</a></li>
	<li id="menu-item-537"><a href="#subIndicatorsPos">subIndicatorsPos</a></li>
	<li id="menu-item-538"><a href="#subIndicatorsText">subIndicatorsText</a></li>
	<li id="menu-item-535"><a href="#subMenusMaxWidth">subMenusMaxWidth</a></li>
	<li id="menu-item-534"><a href="#subMenusMinWidth">subMenusMinWidth</a></li>
	<li id="menu-item-532"><a href="#subMenusSubOffsetX">subMenusSubOffsetX</a></li>
	<li id="menu-item-533"><a href="#subMenusSubOffsetY">subMenusSubOffsetY</a></li>
</ul>
</li>
<li id="menu-item-2563"><a href="#data-attributes">data-* attribute options</a></li>
<li id="menu-item-527"><a class="has-submenu highlighted" href="#events"><span class="sub-arrow">+</span>Events</a>
<ul style="z-index: 2; width: auto; min-width: 10em; display: block; max-width: 20em; top: auto; left: 0px; margin-left: 234px; margin-top: -44px;" class="sub-menu sm-nowrap">
	<li id="menu-item-902"><a href="#activate">activate</a></li>
	<li id="menu-item-572"><a href="#beforefirstshow">beforefirstshow</a></li>
	<li id="menu-item-570"><a href="#beforehide">beforehide</a></li>
	<li id="menu-item-568"><a href="#beforeshow">beforeshow</a></li>
	<li id="menu-item-567"><a href="#blur">blur</a></li>
	<li id="menu-item-562"><a href="#click">click</a></li>
	<li id="menu-item-566"><a href="#focus">focus</a></li>
	<li id="menu-item-571"><a href="#hide">hide</a></li>
	<li id="menu-item-564"><a href="#mouseenter">mouseenter</a></li>
	<li id="menu-item-565"><a href="#mouseleave">mouseleave</a></li>
	<li id="menu-item-563"><a href="#select">select</a></li>
	<li id="menu-item-569"><a href="#show">show</a></li>
</ul>
</li>
<li id="menu-item-528"><a class="has-submenu" href="#methods"><span class="sub-arrow">+</span>Methods</a>
<ul class="sub-menu">
	<li id="menu-item-792"><a href="#global-methods"><span class="disabled">Global</span></a></li>
	<li id="menu-item-795"><a href="#destroyGlobal">destroy</a></li>
	<li id="menu-item-794"><a href="#hideAllGlobal">hideAll</a></li>
	<li id="menu-item-793"><a href="#instance-methods"><span class="disabled">Instance</span></a></li>
	<li id="menu-item-579"><a href="#blurInstance">blur</a></li>
	<li id="menu-item-573"><a href="#destroyInstance">destroy</a></li>
	<li id="menu-item-575"><a href="#disableInstance">disable</a></li>
	<li id="menu-item-574"><a href="#enableInstance">enable</a></li>
	<li id="menu-item-578"><a href="#focusInstance">focus</a></li>
	<li id="menu-item-577"><a href="#itemActivateInstance">itemActivate</a></li>
	<li id="menu-item-580"><a href="#menuHideAllInstance">menuHideAll</a></li>
	<li id="menu-item-582"><a href="#popupHideInstance">popupHide</a></li>
	<li id="menu-item-581"><a href="#popupShowInstance">popupShow</a></li>
	<li id="menu-item-576"><a href="#refreshInstance">refresh</a></li>
</ul>
</li>
<li id="menu-item-619"><a class="has-submenu" href="#tutorials"><span class="sub-arrow">+</span>Tutorials</a>
<ul class="sub-menu">
	<li id="menu-item-633"><a href="#styling-menus">• Styling the menus</a></li>
	<li id="menu-item-853"><a href="#main-menu-classes">• Main menu classes - sm, sm-vertical, sm-rtl</a></li>
	<li id="menu-item-642"><a href="#menu-item-classes">• Menu item classes - disabled, current, highlighted, has-submenu</a></li>
	<li id="menu-item-883"><a href="#touch-support">• Supporting touch devices</a></li>
	<li id="menu-item-643"><a href="#small-screen-support">• Supporting small-screen devices (responsive menus)</a></li>
	<li id="menu-item-621"><a href="#rtl">• Using the script with RTL text (e.g. Hebrew, Arabic)</a></li>
	<li id="menu-item-1033"><a href="#menu-toggle-button">• Adding a menu toggle button on small screens</a></li>
	<li id="menu-item-2451"><a href="#aspnet">• Using the script with ASP.NET</a></li>
	<li id="menu-item-2564"><a href="#upgrading-0-9-x">• Upgrading from v0.9.x</a></li>
</ul>
</li>
<li id="menu-item-622"><a href="#requirements">Requirements</a></li>
<li id="menu-item-598"><a href="http://www.smartmenus.org/">« Back to home page</a></li>
</ul>   <ul id="docs-versions">
    <li><a href="http://www.smartmenus.org/docs/">Current docs for v1.0.x</a></li>
    <li><a href="http://www.smartmenus.org/docs/0-9-x/">Old docs for v0.9.x</a></li>
   </ul>
  </div>
  <!-- #nav end -->





 <div id="content">
  <div class="inner">
	
	<div id="home-banner">
 <h1><img src="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/home_banner_sm_logo.png" id="smartmenus-logo" alt="SmartMenus" title=""> <span>for</span> <img src="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/home_banner_jquery_logo.png" id="jquery-logo" alt="jQuery" title=""> <span style="display:block;margin-top:0.22em;font-style:normal;">Documentation</span></h1>
</div>
<p class="docs-home-link"><a href="http://www.smartmenus.org/" class="gray-button">« Back to home page</a></p>
<h2 id="quick-setup">Quick setup</h2>
<p>Include the script and CSS files on your page:</p>
<pre class="code sh_html sh_sourceCode"><span class="sh_comment">&lt;!-- jQuery --&gt;</span>
<span class="sh_keyword">&lt;script</span> <span class="sh_type">src</span><span class="sh_symbol">=</span><span class="sh_string">"jquery.js"</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/javascript"</span><span class="sh_keyword">&gt;&lt;/script&gt;</span>
<span class="sh_comment">&lt;!-- SmartMenus jQuery plugin --&gt;</span>
<span class="sh_keyword">&lt;script</span> <span class="sh_type">src</span><span class="sh_symbol">=</span><span class="sh_string">"jquery.smartmenus.js"</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/javascript"</span><span class="sh_keyword">&gt;&lt;/script&gt;</span>

<span class="sh_comment">&lt;!-- SmartMenus core CSS (required) --&gt;</span>
<span class="sh_keyword">&lt;link</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_type">'sm-core-css.css'</span><span class="sh_normal"> </span><span class="sh_type">rel</span><span class="sh_symbol">=</span><span class="sh_type">'stylesheet'</span><span class="sh_normal"> </span><span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_type">'text/css'</span><span class="sh_normal"> </span><span class="sh_keyword">/&gt;</span>
<span class="sh_comment">&lt;!-- "sm-blue" menu theme (optional, you can use your own CSS, too) --&gt;</span>
<span class="sh_keyword">&lt;link</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_type">'sm-blue/sm-blue.css'</span><span class="sh_normal"> </span><span class="sh_type">rel</span><span class="sh_symbol">=</span><span class="sh_type">'stylesheet'</span><span class="sh_normal"> </span><span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_type">'text/css'</span><span class="sh_normal"> </span><span class="sh_keyword">/&gt;</span>
</pre>
<p>The menu definition is a standard unordered list structure:</p>
<pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm sm-blue"</span><span class="sh_keyword">&gt;</span>
  <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Item 1<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>
  <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Item 2<span class="sh_keyword">&lt;/a&gt;</span>
    <span class="sh_keyword">&lt;ul&gt;</span>
      <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Item 2-1<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>
      <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Item 2-2<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>
      <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Item 2-3<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>
    <span class="sh_keyword">&lt;/ul&gt;</span>
  <span class="sh_keyword">&lt;/li&gt;</span>
  <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Item 3<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>
<span class="sh_keyword">&lt;/ul&gt;</span>
</pre>
<p>You always need to set the <code>sm</code> class and, optionally, if you would like to use some of the default themes, set it's class too (e.g. like <code>sm-blue</code> in the example above).</p>
<p>If you would like to have <strong>a vertical main menu</strong> instead of horizontal, you also need to set the <code>sm-vertical</code> class:</p>
<pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm sm-vertical sm-blue"</span><span class="sh_keyword">&gt;</span> ...
</pre>
<p>The script is initialized like any other jQuery plugin:</p>
<pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_keyword">function</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span>
  $<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">();</span>
<span class="sh_cbracket">}</span><span class="sh_symbol">);</span>
</pre>

<h2 id="options">Options</h2>
<dl class="docs-terms">
 <dt id="bottomToTopSubMenus">bottomToTopSubMenus</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether the sub menus should be displayed from bottom to top (drop-up) instead of top to bottom (drop-down).</div>
 </dd>
 <dt id="collapsibleHideDuration">collapsibleHideDuration</dt>
 <dd>
  <div>Type: Integer</div>
  <div>The duration for hide animation for collapsible sub menus. This option matters only if <code>collapsibleHideFunction: null</code></div>
 </dd>
 <dt id="collapsibleHideFunction">collapsibleHideFunction</dt>
 <dd>
  <div>Type: null, Function</div>
  <div>Custom function to use when hiding a collapsible sub menu (the default is the jQuery 'hide').</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">collapsibleHideFunction<span class="sh_symbol">:</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>$ul<span class="sh_symbol">,</span> complete<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span> $ul<span class="sh_symbol">.</span><span class="sh_function">SlideUp</span><span class="sh_symbol">(</span><span class="sh_number">250</span><span class="sh_symbol">,</span> complete<span class="sh_symbol">);</span> <span class="sh_cbracket">}</span></pre>
  <div>Note: Don't forget to call complete() at the end of whatever you do with the <code>$ul</code> (the sub menu).</div>
 </dd>
 <dt id="collapsibleShowDuration">collapsibleShowDuration</dt>
 <dd>
  <div>Type: Integer</div>
  <div>The duration for show animation for collapsible sub menus. This option matters only if <code>collapsibleShowFunction: null</code></div>
 </dd>
 <dt id="collapsibleShowFunction">collapsibleShowFunction</dt>
 <dd>
  <div>Type: null, Function</div>
  <div>Custom function to use when showing a collapsible sub menu (the default is the jQuery 'show').</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">collapsibleShowFunction<span class="sh_symbol">:</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>$ul<span class="sh_symbol">,</span> complete<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span> $ul<span class="sh_symbol">.</span><span class="sh_function">SlideDown</span><span class="sh_symbol">(</span><span class="sh_number">250</span><span class="sh_symbol">,</span> complete<span class="sh_symbol">);</span> <span class="sh_cbracket">}</span></pre>
  <div>Note: Don't forget to call complete() at the end of whatever you do with the <code>$ul</code> (the sub menu).</div>
 </dd>
 <dt id="hideDuration">hideDuration</dt>
 <dd>
  <div>Type: Integer</div>
  <div>The duration in milliseconds for hide animation. Set it to 0 for no animation. This option matters only if <code>hideFunction: null</code></div>
 </dd>
 <dt id="hideFunction">hideFunction</dt>
 <dd>
  <div>Type: null, Function</div>
  <div>Custom function to use when hiding a sub menu (the default is the jQuery 'hide').</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">hideFunction<span class="sh_symbol">:</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>$ul<span class="sh_symbol">,</span> complete<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span> $ul<span class="sh_symbol">.</span><span class="sh_function">fadeOut</span><span class="sh_symbol">(</span><span class="sh_number">250</span><span class="sh_symbol">,</span> complete<span class="sh_symbol">);</span> <span class="sh_cbracket">}</span></pre>
  <div>Note: Don't forget to call complete() at the end of whatever you do with the <code>$ul</code> (the sub menu).</div>
 </dd>
 <dt id="hideOnClick">hideOnClick</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether to hide (reset) the sub menus on click/tap anywhere on the page.</div>
 </dd>
 <dt id="hideTimeout">hideTimeout</dt>
 <dd>
  <div>Type: Integer</div>
  <div>The timeout in milliseconds before hiding (resetting) the sub menus on mouseout/focusout.</div>
 </dd>
 <dt id="isPopup">isPopup</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether the menu is a popup menu or a permanent menu bar. Popup menus can be shown/hidden via the <code>popupShow</code> and <code>popupHide</code> API methods. Make sure you position offscreen or hide with <code>display:none</code> in your CSS any popup menus you have.</div>
 </dd>
 <dt id="keepHighlighted">keepHighlighted</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether all ancestor items of the current sub menu should be kept highlighted - the script adds the <code>highlighted</code> class to the links (the <code>&lt;a&gt;</code> elements).</div>
 </dd>
 <dt id="keepInViewport">keepInViewport</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether the sub menus should be repositioned if needed to make sure they always appear inside the viewport.</div>
 </dd>
 <dt id="mainMenuSubOffsetX">mainMenuSubOffsetX</dt>
 <dd>
  <div>Type: Integer</div>
  <div>Allows setting a horizontal offset in pixels from the default position for the first-level sub menus. You may want to check the <code>subMenusSubOffsetX</code> option, too.</div>
 </dd>
 <dt id="mainMenuSubOffsetY">mainMenuSubOffsetY</dt>
 <dd>
  <div>Type: Integer</div>
  <div>Allows setting a vertical offset in pixels from the default position for the first-level sub menus. You may want to check the <code>subMenusSubOffsetY</code> option, too.</div>
 </dd>
 <dt id="markCurrentItem">markCurrentItem</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether the script should automatically add the <code>current</code> class to the <code>&lt;a&gt;</code> element of the item linking to the current page URL.</div>
 </dd>
 <dt id="markCurrentTree">markCurrentTree</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether the script should automatically add the <code>current</code> class to the <code>&lt;a&gt;</code> elements of all ancestor items of the current item. This option matters only if <code>markCurrentItem: true</code></div>
 </dd>
 <dt id="overlapControlsInIE">overlapControlsInIE</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether the script should make sure the sub menus 
appear on top of special OS controls in Internet Explorer (i.e. SELECT, 
OBJECT, EMBED, etc.) You may opt to disable this feature if you don't 
need this fix and would like to achieve best possible runtime 
performance in IE (other browsers are not affected anyway).</div>
 </dd>
 <dt id="rightToLeftSubMenus">rightToLeftSubMenus</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether the sub menus should be displayed from right 
to left instead of left to right. You may need to check and update the 
CSS for the sub indicators' position, too (i.e. look for <code>span.sub-arrow</code>).</div>
 </dd>
 <dt id="scrollAccelerate">scrollAccelerate</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether to accelerate scrolling or use a fixed step 
for long sub menus that do not fully fit in the viewport height (i.e. 
start slower and then gradually increase the step).</div>
 </dd>
 <dt id="scrollInterval">scrollInterval</dt>
 <dd>
  <div>Type: Integer</div>
  <div>Interval in milliseconds between each scrolling step for long sub menus that do not fully fit in the viewport height.</div>
 </dd>
 <dt id="scrollStep">scrollStep</dt>
 <dd>
  <div>Type: Integer</div>
  <div>Step in pixels when scrolling long sub menus that do not fit in the viewport height.</div>
 </dd>
 <dt id="showDuration">showDuration</dt>
 <dd>
  <div>Type: Integer</div>
  <div>The duration in milliseconds for show animation. Set it to 0 for no animation. This option matters only if <code>showFunction: null</code></div>
 </dd>
 <dt id="showFunction">showFunction</dt>
 <dd>
  <div>Type: null, Function</div>
  <div>Custom function to use when showing a sub menu (the default is the jQuery 'show').</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">showFunction<span class="sh_symbol">:</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>$ul<span class="sh_symbol">,</span> complete<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span> $ul<span class="sh_symbol">.</span><span class="sh_function">fadeIn</span><span class="sh_symbol">(</span><span class="sh_number">250</span><span class="sh_symbol">,</span> complete<span class="sh_symbol">);</span> <span class="sh_cbracket">}</span></pre>
  <div>Note: Don't forget to call complete() at the end of whatever you do with the <code>$ul</code> (the sub menu).</div>
 </dd>
 <dt id="showOnClick">showOnClick</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether to show the first-level sub menus onclick 
instead of onmouseover - i.e. like drop-down menus on desktop 
applications. This option matters only for mouse input.</div>
 </dd>
 <dt id="showTimeout">showTimeout</dt>
 <dd>
  <div>Type: Integer</div>
  <div>The timeout in milliseconds before showing the sub menus on mouseover/focusin.</div>
 </dd>
 <dt id="subIndicators">subIndicators</dt>
 <dd>
  <div>Type: Boolean</div>
  <div>Determines whether to create sub menu indicators. The script creates a <code>&lt;span&gt;</code> and inserts it in the item's <code>&lt;a&gt;</code> element.</div>
 </dd>
 <dt id="subIndicatorsPos">subIndicatorsPos</dt>
 <dd>
  <div>Type: String</div>
  <div>Position of the sub menu indicator <code>&lt;span&gt;</code> relative to the menu item content. A keyword specifying the jQuery method to use when inserting the <code>&lt;span&gt;</code> in the menu item's <code>&lt;a&gt;</code> element - either <code>'prepend'</code>, or <code>'append'</code>.</div>
 </dd>
 <dt id="subIndicatorsText">subIndicatorsText</dt>
 <dd>
  <div>Type: String</div>
  <div>A text string to be added in the sub menu indicator <code>&lt;span&gt;</code> (e.g. '+'). You may need to check and update the CSS for the sub indicators, too (i.e. look for span.sub-arrow).</div>
 </dd>
 <dt id="subMenusMaxWidth">subMenusMaxWidth</dt>
 <dd>
  <div>Type: String</div>
  <div>Max-width for the sub menus in any valid CSS unit. If a value is set, any fixed width set in CSS will be ignored by the script.</div>
 </dd>
 <dt id="subMenusMinWidth">subMenusMinWidth</dt>
 <dd>
  <div>Type: String</div>
  <div>Min-width for the sub menus in any valid CSS unit. If a value is set, any fixed width set in CSS will be ignored by the script.</div>
 </dd>
 <dt id="subMenusSubOffsetX">subMenusSubOffsetX</dt>
 <dd>
  <div>Type: Integer</div>
  <div>Allows setting a horizontal offset in pixels from the default 
position for the second+ level sub menus. You may want to check the <code>mainMenuSubOffsetX</code> option, too.</div>
 </dd>
 <dt id="subMenusSubOffsetY">subMenusSubOffsetY</dt>
 <dd>
  <div>Type: Integer</div>
  <div>Allows setting a vertical offset in pixels from the default position for the second+ level sub menus. You may want to check the <code>mainMenuSubOffsetY</code> option, too.</div>
 </dd>
</dl>

<h2 id="data-attributes">data-* attribute options</h2>
<dl class="docs-terms">
 <dt id="data-sm-reverse">data-sm-reverse</dt>
 <dd>
  <div>Set to: <code>&lt;li&gt;</code> elements that have a sub menu (i.e. sub <code>&lt;ul&gt;</code> element)</div>
  <div>Allows reversing the horizontal alignment of a specific sub menu. Reverses the direction regardless of the value of the <code>rightToLeftSubMenus</code>
 option. A common use case is when we want all sub menus of a horizontal
 main menu to be left aligned except the last one that we would like to 
be right aligned.</div>
  <div>Code sample:</div>
  <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;li</span> <span class="sh_type">data-sm-reverse</span><span class="sh_symbol">=</span><span class="sh_string">"true"</span><span class="sh_keyword">&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Item<span class="sh_keyword">&lt;/a&gt;</span>
  <span class="sh_keyword">&lt;ul&gt;</span>
    <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Sub item 1<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>
    <span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Sub item 2<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>
  <span class="sh_keyword">&lt;/ul&gt;</span>
<span class="sh_keyword">&lt;/li&gt;</span></pre>
 </dd>
 <dt id="data-sm-skip">data-sm-skip</dt>
 <dd>
  <div>Supported with: Bootstrap add-on</div>
  <div>Set to: any Bootstrap navbar's <code>ul.navbar-nav</code> element</div>
  <div>Tells the script to skip this navbar and not apply any SmartMenus
 features to it so it will behave like a regular Bootstrap navbar.</div>
  <div>Code sample:</div>
  <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"nav navbar-nav"</span> <span class="sh_type">data-sm-skip</span><span class="sh_symbol">=</span><span class="sh_string">"true"</span><span class="sh_keyword">&gt;</span>...</pre>
 </dd>
 <dt id="data-sm-skip-collapsible-behavior">data-sm-skip-collapsible-behavior</dt>
 <dd>
  <div>Supported with: Bootstrap add-on</div>
  <div>Set to: any Bootstrap navbar's <code>ul.navbar-nav</code> element</div>
  <div>Tells the script to not apply SmartMenus' specific behavior to 
this navbar in collapsible mode (mobile view). Bootstrap's behavior for 
navbars in collapsible mode is to use the whole area of the parent items
 just as a toggle button for their sub menus and thus it's impossible to
 set a link to the parent items that can be followed on click/tap. 
SmartMenus' behavior is to add a separate dedicated +/- sub menus toggle
 button to parent items and thus allows the link of the parent items to 
be activated on the second click/tap (the first click/tap displays the 
sub menu if it's not visible).</div>
  <div>Code sample:</div>
  <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"nav navbar-nav"</span> <span class="sh_type">data-sm-skip-collapsible-behavior</span><span class="sh_symbol">=</span><span class="sh_string">"true"</span><span class="sh_keyword">&gt;</span>...</pre>
 </dd>
</dl>

<h2 id="events">Events</h2>
<dl class="docs-terms">
 <dt id="activate">activate</dt>
 <dd>
  <div>
  <div>Fired when an item is activated, right before its sub menu (if the item has a sub menu) is shown. You can cancel the event with <code>return false</code> and the item's sub menu will not be shown.</div>
  <div>Cancelable: Yes</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>item</dt>
   <dd>The menu item <code>&lt;a&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'activate.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> item<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="beforefirstshow">beforefirstshow</dt>
 <dd>
  <div>Fired only once for each sub menu, right before it's shown for 
the first time. You could use it, for example, for some initialization 
tasks that need to be called just once. You can cancel the event with <code>return false</code> and the sub menu will not be shown.</div>
  <div>Cancelable: Yes</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>menu</dt>
   <dd>The sub menu <code>&lt;ul&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'beforefirstshow.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> menu<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
 </dd>
 <dt id="beforehide">beforehide</dt>
 <dd>
  <div>
  <div>Fired right before a sub menu is hidden. You can cancel the event with <code>return false</code> and the sub menu will not be hidden.</div>
  <div>Cancelable: Yes</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>menu</dt>
   <dd>The sub menu <code>&lt;ul&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'beforehide.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> menu<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="beforeshow">beforeshow</dt>
 <dd>
  <div>
  <div>Fired right before a sub menu is shown. You can cancel the event with <code>return false</code> and the sub menu will not be shown.</div>
  <div>Cancelable: Yes</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>menu</dt>
   <dd>The sub menu <code>&lt;ul&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'beforeshow.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> menu<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="blur">blur</dt>
 <dd>
  <div>
  <div>Fired when an item loses focus.</div>
  <div>Cancelable: No</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>item</dt>
   <dd>The menu item <code>&lt;a&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'blur.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> item<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="click">click</dt>
 <dd>
  <div>
  <div>Fired when an item is clicked. You can cancel the event with <code>return false</code>
 and the item will not be selected (i.e. it's link won't be loaded) and 
if there is a sub menu which should appear on click, it won't be shown, 
too. This event is fired even for <a href="#menu-item-classes">disabled items</a> so you may want to check the <code>select</code> event, too.</div>
  <div>Cancelable: Yes</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>item</dt>
   <dd>The menu item <code>&lt;a&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'click.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> item<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="focus">focus</dt>
 <dd>
  <div>
  <div>Fired when an item is focused.</div>
  <div>Cancelable: No</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>item</dt>
   <dd>The menu item <code>&lt;a&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'focus.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> item<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="hide">hide</dt>
 <dd>
  <div>
  <div>Fired right after a sub menu is hidden.</div>
  <div>Cancelable: No</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>menu</dt>
   <dd>The sub menu <code>&lt;ul&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'hide.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> menu<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="mouseenter">mouseenter</dt>
 <dd>
  <div>
  <div>Fired when an item is hovered.</div>
  <div>Cancelable: No</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>item</dt>
   <dd>The menu item <code>&lt;a&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'mouseenter.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> item<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="mouseleave">mouseleave</dt>
 <dd>
  <div>
  <div>Fired when an item is hovered out.</div>
  <div>Cancelable: No</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>item</dt>
   <dd>The menu item <code>&lt;a&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'mouseleave.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> item<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="select">select</dt>
 <dd>
  <div>
  <div>Fired when an item is selected, right before it's link is loaded. You can cancel the event with <code>return false</code> and the item will not be selected (i.e. it's link won't be loaded). This event is not fired for <a href="#menu-item-classes">disabled items</a> so you may want to check the <code>click</code> event, too.</div>
  <div>Cancelable: Yes</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>item</dt>
   <dd>The menu item <code>&lt;a&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'select.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> item<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
 <dt id="show">show</dt>
 <dd>
  <div>
  <div>Fired right after a sub menu is shown.</div>
  <div>Cancelable: No</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>e</dt>
   <dd>The jQuery.Event object.</dd>
   <dt>menu</dt>
   <dd>The sub menu <code>&lt;ul&gt;</code> element.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">bind</span><span class="sh_symbol">(</span><span class="sh_string">'show.smapi'</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>e<span class="sh_symbol">,</span> menu<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span><span class="sh_symbol">);</span></pre>
  </div>
 </dd>
</dl>

<h2 id="methods">Methods</h2>
<h3 id="global-methods">Global methods</h3>
<p>The following methods are global for all menu instances.</p>
<dl class="docs-terms">
 <dt id="destroyGlobal">destroy</dt>
 <dd>
  <div>Destroys all menu instances initialized on the page and cleans up everything.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">.</span>SmartMenus<span class="sh_symbol">.</span><span class="sh_function">destroy</span><span class="sh_symbol">();</span></pre>
 </dd>
 <dt id="hideAllGlobal">hideAll</dt>
 <dd>
  <div>Hides (resets) all sub menus of all menu instances on the page.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">.</span>SmartMenus<span class="sh_symbol">.</span><span class="sh_function">hideAll</span><span class="sh_symbol">();</span></pre>
 </dd>
</dl>
<h3 id="instance-methods">Instance methods</h3>
<p>The following methods are available for each menu instance.</p>
<dl class="docs-terms">
 <dt id="blurInstance">blur</dt>
 <dd>
  <div>Use the native JavaScript method for any menu item's <code>&lt;a&gt;</code> element if you need. This will deactivate the item and hide any sub menus.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'a#myItem'</span><span class="sh_symbol">)[</span><span class="sh_number">0</span><span class="sh_symbol">].</span><span class="sh_predef_func">blur</span><span class="sh_symbol">();</span></pre>
 </dd>
 <dt id="destroyInstance">destroy</dt>
 <dd>
  <div>Destroys the menu instance and cleans up.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'destroy'</span><span class="sh_symbol">);</span></pre>
 </dd>
 <dt id="disableInstance">disable</dt>
 <dd>
  <div>Disables the menu and optionally displays a transparent overlay <code>&lt;div&gt;</code> over the main menu.</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>noOverlay</dt>
   <dd>Type: Boolean<br>Default value: false<br>If <code>true</code> is passed, no overlay will be displayed over the main menu.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode"><span class="sh_comment">// disable the menu</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'disable'</span><span class="sh_symbol">);</span>

<span class="sh_comment">// disable the menu but don't display an overlay over the main menu</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'disable'</span><span class="sh_symbol">,</span> <span class="sh_keyword">true</span><span class="sh_symbol">);</span></pre>
 </dd>
 <dt id="enableInstance">enable</dt>
 <dd>
  <div>Enable the menu after it has been disabled.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'enable'</span><span class="sh_symbol">);</span></pre>
 </dd>
 <dt id="focusInstance">focus</dt>
 <dd>
  <div>Use the native JavaScript method for any menu item's <code>&lt;a&gt;</code> element to send keyboard focus to it. Note that you may need to call <code>itemActivate</code>
 first to make sure the menu containing the item is visible when you try
 to focus it, otherwise the item might not be focused by the browser.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'a#myItem'</span><span class="sh_symbol">)[</span><span class="sh_number">0</span><span class="sh_symbol">].</span><span class="sh_predef_func">focus</span><span class="sh_symbol">();</span></pre>
 </dd>
 <dt id="itemActivateInstance">itemActivate</dt>
 <dd>
  <div>Activates any menu item. This will show its sub menu (if the item
 has a sub menu). If you want to also send keyboard focus to the item, 
you can additionally call the <code>focus</code> method.</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>$a</dt>
   <dd>Type: jQuery<br>The jQuery wrapped <code>&lt;a&gt;</code> element of the item you would like to activate.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode"><span class="sh_comment">// activate the item</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'itemActivate'</span><span class="sh_symbol">,</span> $<span class="sh_symbol">(</span><span class="sh_string">'a#myItem'</span><span class="sh_symbol">));</span>

<span class="sh_comment">// activate the item and focus it</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'itemActivate'</span><span class="sh_symbol">,</span> $<span class="sh_symbol">(</span><span class="sh_string">'a#myItem'</span><span class="sh_symbol">));</span>
$<span class="sh_symbol">(</span><span class="sh_string">'a#myItem'</span><span class="sh_symbol">)[</span><span class="sh_number">0</span><span class="sh_symbol">].</span><span class="sh_predef_func">focus</span><span class="sh_symbol">();</span></pre>
 </dd>
 <dt id="menuHideAllInstance">menuHideAll</dt>
 <dd>
  <div>Hides (resets) all sub menus.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'menuHideAll'</span><span class="sh_symbol">);</span></pre>
 </dd>
 <dt id="popupHideInstance">popupHide</dt>
 <dd>
  <div>Hides any popup menu. A menu is a popup menu when the <code>isPopup: true</code> option is set. When <code>isPopup: false</code> the main menu is permanent (always visible) and cannot be hidden with this method.</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>noHideTimeout</dt>
   <dd>Type: Boolean<br>Default value: false<br>If <code>true</code> is passed, the menu will be hidden immediately, otherwise the <code>hideTimeout</code> option specifies the delay before hiding the popup menu.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode"><span class="sh_comment">// hide a popup menu</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#popup-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'popupHide'</span><span class="sh_symbol">);</span>

<span class="sh_comment">// hide a popup menu immediately without a delay</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#popup-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'popupHide'</span><span class="sh_symbol">,</span> <span class="sh_keyword">true</span><span class="sh_symbol">);</span></pre>
 </dd>
 <dt id="popupShowInstance">popupShow</dt>
 <dd>
  <div>Shows any popup menu. A menu is a popup menu when the <code>isPopup: true</code> option is set. When <code>isPopup: false</code> the main menu is permanent (always visible) and cannot be shown with this method.</div>
  <div>Arguments:</div>
  <dl class="docs-arguments">
   <dt>left</dt>
   <dd>Type: String<br>Pass a value for the CSS <code>left</code> declaration to be set for the popup menu before it is shown.</dd>
   <dt>top</dt>
   <dd>Type: String<br>Pass a value for the CSS <code>top</code> declaration to be set for the popup menu before it is shown.</dd>
  </dl>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode"><span class="sh_comment">// show the popup at left:100px;top:100px;</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#popup-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'popupShow'</span><span class="sh_symbol">,</span> <span class="sh_string">'100px'</span><span class="sh_symbol">,</span> <span class="sh_string">'100px'</span><span class="sh_symbol">);</span>

<span class="sh_comment">// show the popup right below some target element</span>
<span class="sh_keyword">var</span> $targetElm <span class="sh_symbol">=</span> $<span class="sh_symbol">(</span><span class="sh_string">'#targetElm'</span><span class="sh_symbol">),</span>
    targetOffset <span class="sh_symbol">=</span> $targetElm<span class="sh_symbol">.</span><span class="sh_function">offset</span><span class="sh_symbol">();</span>
$<span class="sh_symbol">(</span><span class="sh_string">'#popup-menu'</span><span class="sh_symbol">).</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'popupShow'</span><span class="sh_symbol">,</span> targetOffset<span class="sh_symbol">.</span><span class="sh_predef_var">left</span><span class="sh_symbol">,</span> targetOffset<span class="sh_symbol">.</span><span class="sh_predef_var">top</span> <span class="sh_symbol">+</span> $targetElm<span class="sh_symbol">.</span><span class="sh_predef_var">outerHeight</span><span class="sh_symbol">());</span></pre>
 </dd>
 <dt id="refreshInstance">refresh</dt>
 <dd>
  <div>Refreshes (re-initializes) the menu after any DOM operations have
 been applied - e.g. adding/removing items and sub menus or completely 
replacing the <code>innerHTML</code> of the root <code>&lt;ul&gt;</code> element.</div>
  <div>Code sample:</div>
  <pre class="code sh_javascript sh_sourceCode"><span class="sh_keyword">var</span> $menu <span class="sh_symbol">=</span> $<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">);</span>

<span class="sh_comment">// append a new main menu item</span>
$menu<span class="sh_symbol">.</span><span class="sh_function">append</span><span class="sh_symbol">(</span><span class="sh_string">'&lt;li&gt;&lt;a href="#"&gt;New item&lt;/a&gt;&lt;/li&gt;'</span><span class="sh_symbol">);</span>

<span class="sh_comment">// add a sub menu with 3 items to the new main menu item</span>
$menu<span class="sh_symbol">.</span><span class="sh_function">children</span><span class="sh_symbol">(</span><span class="sh_string">'li:last'</span><span class="sh_symbol">).</span><span class="sh_function">append</span><span class="sh_symbol">(</span><span class="sh_string">'&lt;ul&gt;\</span>
<span class="sh_string">  &lt;li&gt;&lt;a href="#"&gt;New item&lt;/a&gt;&lt;/li&gt;\</span>
<span class="sh_string">  &lt;li&gt;&lt;a href="#"&gt;New item&lt;/a&gt;&lt;/li&gt;\</span>
<span class="sh_string">  &lt;li&gt;&lt;a href="#"&gt;New item&lt;/a&gt;&lt;/li&gt;\</span>
<span class="sh_string">&lt;/ul&gt;'</span><span class="sh_symbol">);</span>

<span class="sh_comment">// refresh the menu after the DOM operations</span>
$menu<span class="sh_symbol">.</span><span class="sh_function">smartmenus</span><span class="sh_symbol">(</span><span class="sh_string">'refresh'</span><span class="sh_symbol">);</span></pre>
 </dd>
</dl>

<h2 id="tutorials">Tutorials</h2>

<h3 id="styling-menus">Styling the menus</h3>
<p>You can style the menus and items the same way you can style any other unordered list on your page. The <code>&lt;ul&gt;</code> elements represent the menu boxes and the <code>&lt;a&gt;</code> elements - the menu items.</p>
<p>You always need to include on your pages the SmartMenus core CSS <code>sm-core-css.css</code>
 which includes just some basic rules that take care of things like 
resetting default list styles, main menu items arrangement, etc. And 
then you can:</p>
<ul>
 <li>either use (and modify to suit your needs) some of the default themes;</li>
 <li>or you can even use your own CSS to style the menus and items as you like.</li>
</ul>
<h4>Styling on your own without using any of the bundled themes</h4>
<p>If you would like to style the menus on your own without using any of the default themes, you need to know that the CSS code in <code>sm-core-css.css</code>
 is mobile first. This means that by default it produces a vertical menu
 bar with collapsible sub menus (i.e. a mobile collapsible menu). So 
when you create rules to style the menu elements that are not wrapped in
 media queries, you will style the collapsible menu bar. To switch the 
menu bar to desktop view (i.e. main menu with drop-down sub menus), you 
will need to include a separate section inside a media query in your CSS
 that must include some additional required rules in the beginning like 
shown in the following example.</p>
<p>Let's say you are creating your own theme from scratch called "mytheme". For the HTML you will need to have something like this:</p>
<pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm sm-mytheme"</span><span class="sh_keyword">&gt;</span> ...
</pre>
<p>And for the CSS first you will need to include <code>sm-core-css.css</code> on your page and then you will need to have something like this to start your new theme:</p>
<pre class="code sh_css sh_sourceCode"><span class="sh_comment">/* Your rules to style the menu in mobile view (collapsible mode) here... */</span>


@media <span class="sh_symbol">(</span>min<span class="sh_symbol">-</span>width<span class="sh_symbol">:</span> 768px<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>

	<span class="sh_comment">/* Switch to desktop layout</span>
<span class="sh_comment">	-----------------------------------------------</span>
<span class="sh_comment">	   These transform the menu tree from</span>
<span class="sh_comment">	   collapsible to desktop (navbar + dropdowns)</span>
<span class="sh_comment">	-----------------------------------------------*/</span>
	<span class="sh_comment">/* start... (it's not recommended editing these rules) */</span>
	<span class="sh_value">.sm-mytheme</span> <span class="sh_value">ul</span>{<span class="sh_property">position:</span><span class="sh_value">absolute</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme li<span class="sh_cbracket">{</span><span class="sh_property">float:</span><span class="sh_value">left</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>rtl li<span class="sh_cbracket">{</span><span class="sh_property">float:</span><span class="sh_value">right</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme ul li<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>rtl ul li<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>vertical li<span class="sh_cbracket">{</span><span class="sh_property">float:</span><span class="sh_value">none</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme a<span class="sh_cbracket">{</span><span class="sh_property">white-space:</span><span class="sh_value">nowrap</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme ul a<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>vertical a<span class="sh_cbracket">{</span><span class="sh_property">white-space:</span><span class="sh_value">normal</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme <span class="sh_selector">.sm</span><span class="sh_symbol">-</span>nowrap <span class="sh_symbol">&gt;</span> li <span class="sh_symbol">&gt;</span> a<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>mytheme <span class="sh_selector">.sm</span><span class="sh_symbol">-</span>nowrap <span class="sh_symbol">&gt;</span> li <span class="sh_symbol">&gt;</span> <span class="sh_symbol">:</span>not<span class="sh_symbol">(</span>ul<span class="sh_symbol">)</span> a<span class="sh_cbracket">{</span><span class="sh_property">white-space:</span><span class="sh_value">nowrap</span>;<span class="sh_cbracket">}</span>
	<span class="sh_comment">/* ...end */</span>


	<span class="sh_comment">/* Your rules to style the menu in desktop view here... */</span>
}
</pre>

<h3 id="main-menu-classes">Main menu classes - sm, sm-vertical, sm-rtl</h3>
<p>There are some classes that you can and may need to set to your main menu (the root <code>&lt;ul&gt;</code> element):</p>
<dl class="docs-terms">
 <dt>sm</dt>
 <dd>
  <div>This is a required class you always need to set to any menu you are going to use.</div>
  <div>Code sample:</div>
  <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm"</span><span class="sh_keyword">&gt;</span> ...</pre>
 </dd>
 <dt>sm-vertical</dt>
 <dd>
  <div>Setting this class will make your main menu vertical and the 
items will appear one below the other. By default when this class is not
 set, the main menu is horizontal.</div>
  <div>Code sample:</div>
  <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm sm-vertical"</span><span class="sh_keyword">&gt;</span> ...</pre>
 </dd>
 <dt>sm-rtl</dt>
 <dd>
  <div>You need to set this class if the text in the menus is right-to-left - e.g. Hebrew, Arabic, etc. Read <a href="#rtl">Using the script with RTL text (e.g. Hebrew, Arabic)</a> for more info.</div>
 </dd>
</dl>
<p>If you use some of the default menu themes, you will also need to set its class too - e.g. <code>sm-blue</code> for the default blue theme.</p>

<h3 id="menu-item-classes">Menu item classes - disabled, current, highlighted, has-submenu</h3>
<p>There are some classes that you can set or are set automatically by the script to the menu items (the <code>&lt;a&gt;</code> elements):</p>
<dl class="docs-terms">
 <dt>disabled</dt>
 <dd>
  <div>You can set this class to any menu item to make it disabled. User clicks on disabled items are neglected by the script.</div>
  <div>Code sample:</div>
  <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"disabled"</span><span class="sh_keyword">&gt;</span> ...</pre>
 </dd>
 <dt>current</dt>
 <dd>
  <div>You can configure the script to set this class automatically to 
the item linking to the current page URL that is loaded by the browser 
(and optionally to its parent items). This would allow you to style the 
current item differently from all other items. You can control this 
feature via the <code>markCurrentItem</code> and <code>markCurrentTree</code> options.</div>
 </dd>
 <dt>highlighted</dt>
 <dd>
  <div>When the <code>keepHighlighted: true</code> option is set, the 
script will automatically add this class at runtime to any item that has
 its sub menu displayed. The class is removed as soon as the sub menu is
 hidden.</div>
 </dd>
 <dt>has-submenu</dt>
 <dd>
  <div>The script sets this class on init to all items that have sub menus.</div>
 </dd>
</dl>

<h3 id="touch-support">Supporting touch devices</h3>
<p>Both touch and mouse input are supported by default. You don't need 
to do anything about it - your menus will just work and respond to 
whatever input is available on the device. The script even supports 
simultaneous touch and mouse input (for example, an Android device with a
 USB mouse plugged in, a Windows 8 touch-enabled device, etc.) which 
means that the menus will respond properly to the mouse cursor movement 
and any touches at the same time.</p>

<h3 id="small-screen-support">Supporting small-screen devices (responsive menus)</h3>
<p>The script is mobile-first and it supports small-screen devices by 
presenting a vertical menu bar with collapsible sub menus when the 
browser viewport is not wide enough (i.e. mobile view) and transforming 
it to a desktop horizontal or vertical main menu with drop-down sub 
menus when the screen is wide enough (i.e. desktop view).</p>
<p>You can control the exact width breakpoint for the switch from mobile
 to desktop view in the theme's CSS file if you are using any of the 
bundled themes or in your own theme's CSS file if you are <a href="#styling-menus">styling the menus on your own</a>.</p>

<h3 id="rtl">Using the script with RTL text (e.g. Hebrew, Arabic)</h3>
<p>To use the script with right-to-left text you just need to set the <code>sm-rtl</code> class to the root <code>&lt;ul&gt;</code> element:</p>
<pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm sm-rtl sm-blue"</span><span class="sh_keyword">&gt;</span> ...
<span class="sh_comment">&lt;!-- or --&gt;</span>
<span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm sm-rtl sm-vertical sm-blue"</span><span class="sh_keyword">&gt;</span> ...</pre>
<p>and the script will take care of everything.</p>

<h3 id="menu-toggle-button">Adding a menu toggle button on small screens</h3>
<p>Here is some sample code that adds a menu toggle show/hide button on small screens.</p>
<p>HTML:</p>
<p>Add the <code>collapsed</code> class to the root <code>&lt;ul&gt;</code> element - e.g.:</p>
<pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"main-menu"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"sm sm-blue collapsed"</span><span class="sh_keyword">&gt;</span> ...</pre>
Add the menu button code on your page:
<pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">"menu-button"</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"collapsed"</span><span class="sh_keyword">&gt;&lt;/a&gt;</span></pre>
<p>CSS:</p>
<pre class="code sh_css sh_sourceCode"><span class="sh_selector">#menu</span><span class="sh_symbol">-</span>button <span class="sh_cbracket">{</span>
  <span class="sh_comment">/* style it as you like... */</span>
<span class="sh_cbracket">}</span>
<span class="sh_selector">#menu</span><span class="sh_symbol">-</span>button<span class="sh_symbol">:</span>before <span class="sh_cbracket">{</span>
  <span class="sh_property">content:</span> '<span class="sh_value">Menu</span> <span class="sh_value">-</span>';
<span class="sh_cbracket">}</span>
<span class="sh_selector">#menu</span><span class="sh_symbol">-</span>button<span class="sh_selector">.collapsed</span><span class="sh_symbol">:</span>before <span class="sh_cbracket">{</span>
  <span class="sh_property">content:</span> '<span class="sh_value">Menu</span> +';
<span class="sh_cbracket">}</span>
<span class="sh_selector">#main</span><span class="sh_symbol">-</span>menu<span class="sh_selector">.collapsed</span> <span class="sh_cbracket">{</span>
  <span class="sh_property">display:</span> <span class="sh_value">none</span>;
<span class="sh_cbracket">}</span>
@media <span class="sh_symbol">(</span>min<span class="sh_symbol">-</span>width<span class="sh_symbol">:</span> 768px<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
  <span class="sh_comment">/* hide the button in desktop view */</span>
  <span class="sh_string">#menu</span><span class="sh_value">-button</span> {
    <span class="sh_property">display:</span> <span class="sh_value">none</span>;
  <span class="sh_cbracket">}</span>
  <span class="sh_comment">/* always show the menu in desktop view */</span>
  <span class="sh_selector">#main</span><span class="sh_symbol">-</span>menu<span class="sh_selector">.collapsed</span> <span class="sh_cbracket">{</span>
    <span class="sh_property">display:</span> <span class="sh_value">block</span>;
  <span class="sh_cbracket">}</span>
}</pre>
<p>JavaScript:</p>
<pre class="code sh_javascript sh_sourceCode">$<span class="sh_symbol">(</span><span class="sh_keyword">function</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span>
  $<span class="sh_symbol">(</span><span class="sh_string">'#menu-button'</span><span class="sh_symbol">).</span><span class="sh_function">click</span><span class="sh_symbol">(</span><span class="sh_keyword">function</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span>
    <span class="sh_keyword">var</span> $<span class="sh_keyword">this</span> <span class="sh_symbol">=</span> $<span class="sh_symbol">(</span><span class="sh_keyword">this</span><span class="sh_symbol">),</span>
        $menu <span class="sh_symbol">=</span> $<span class="sh_symbol">(</span><span class="sh_string">'#main-menu'</span><span class="sh_symbol">);</span>
    <span class="sh_keyword">if</span> <span class="sh_symbol">(</span>$menu<span class="sh_symbol">.</span><span class="sh_function">is</span><span class="sh_symbol">(</span><span class="sh_string">':animated'</span><span class="sh_symbol">))</span> <span class="sh_cbracket">{</span>
      <span class="sh_keyword">return</span> <span class="sh_keyword">false</span><span class="sh_symbol">;</span>
    <span class="sh_cbracket">}</span>
    <span class="sh_keyword">if</span> <span class="sh_symbol">(!</span>$<span class="sh_keyword">this</span><span class="sh_symbol">.</span><span class="sh_function">hasClass</span><span class="sh_symbol">(</span><span class="sh_string">'collapsed'</span><span class="sh_symbol">))</span> <span class="sh_cbracket">{</span>
      $menu<span class="sh_symbol">.</span><span class="sh_function">slideUp</span><span class="sh_symbol">(</span><span class="sh_number">250</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span> $<span class="sh_symbol">(</span><span class="sh_keyword">this</span><span class="sh_symbol">).</span><span class="sh_function">addClass</span><span class="sh_symbol">(</span><span class="sh_string">'collapsed'</span><span class="sh_symbol">).</span><span class="sh_function">css</span><span class="sh_symbol">(</span><span class="sh_string">'display'</span><span class="sh_symbol">,</span> <span class="sh_string">''</span><span class="sh_symbol">);</span> <span class="sh_cbracket">}</span><span class="sh_symbol">);</span>
      $<span class="sh_keyword">this</span><span class="sh_symbol">.</span><span class="sh_function">addClass</span><span class="sh_symbol">(</span><span class="sh_string">'collapsed'</span><span class="sh_symbol">);</span>
    <span class="sh_cbracket">}</span> <span class="sh_keyword">else</span> <span class="sh_cbracket">{</span>
      $menu<span class="sh_symbol">.</span><span class="sh_function">slideDown</span><span class="sh_symbol">(</span><span class="sh_number">250</span><span class="sh_symbol">,</span> <span class="sh_keyword">function</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span> $<span class="sh_symbol">(</span><span class="sh_keyword">this</span><span class="sh_symbol">).</span><span class="sh_function">removeClass</span><span class="sh_symbol">(</span><span class="sh_string">'collapsed'</span><span class="sh_symbol">);</span> <span class="sh_cbracket">}</span><span class="sh_symbol">);</span>
      $<span class="sh_keyword">this</span><span class="sh_symbol">.</span><span class="sh_function">removeClass</span><span class="sh_symbol">(</span><span class="sh_string">'collapsed'</span><span class="sh_symbol">);</span>
    <span class="sh_cbracket">}</span>
    <span class="sh_keyword">return</span> <span class="sh_keyword">false</span><span class="sh_symbol">;</span>
  <span class="sh_cbracket">}</span><span class="sh_symbol">);</span>
<span class="sh_cbracket">}</span><span class="sh_symbol">);</span></pre>
<p>This will show a menu toggle button (link) when the viewport width is
 less than 768px (the default breakpoint used in all bundled themes). 
This is, of course, just a basic example - you can tweak the styling of 
the button as you like, change the exact width breakpoint, etc.</p>

<h3 id="aspnet">Using the script with ASP.NET</h3>
<p><em>This tutorial is kindly contributed by Henry Wyckoff (henry.wyckoff at Gmail).</em></p>
<h4>Background</h4>
<p>The asp:menu, although able to render as a valid unordered list, is littered with class names and styles in the <code>&lt;ul&gt;</code> and <code>&lt;a&gt;</code>
 tags that jQuery is unable to remove because of Javascript code that 
the ASP.NET server applies. It is not possible to configure the asp:menu
 control to render without those class names and styles. Personal 
experience in connecting the SmartMenus to the rendered output of the 
asp:menu revealed that the rendered class names interfered with the 
intended functionality and placement of submenus. The author of this 
tutorial developed, with inspiration and occasional assistance from 
members of the ASP.NET forum and the Stack Overflow forum.</p>
<h4>Notes and assumptions</h4>
<ul>
  <li>Use of Visual Studio and basic familiarity with it is assumed</li>
  <li>The materials presented in this tutorial are verified as usable 
with "Web Site" and "Web
Application" for ASP.NET version 4.0 and 4.5. Although you can use "Web 
Site", it is a really good idea to convert your Web Site into a Web 
Application for many important reasons, including the ability to create 
customized controls with greater ease (which is what you are in a way 
doing with this method).</li>
  <li>These instructions were not developed for MVC and will possibly need revisions to work in MVC.</li>
  <li>The script language is VB. The code can easily be translated to C#
 without any compatibility problems. If you do not already use a VB to 
C# translator, you can easily find one with your search engine of 
choice.</li>
  <li>Screenshots shown are from a "Web Application" but the instructions are identical to the steps taken in a "Web Site".</li>
  <li>Your pages are set up with "Code Behind."</li>
  <li>You are using at least one masterpage to which your aspx pages are connected.</li>
  <li>HTML5 is the assumed version.</li>
  <li>The class chosen for this example is "sm sm-blue" for a horizontal
 menu. Feel free to choose your own SmartMenus class from the available 
options.</li>
</ul>
<h4>Requirements</h4>
<ul>
  <li>jQuery 1.6.4 or above, either as a CDN or downloaded script files</li>
  <li>Your project is a web application or website</li>
  <li>Web.sitemap file is defined and contains the correct links and site structure</li>
</ul>
<h4>Instructions</h4>
<ol>
  <li>Create a new class. Name it "CleanMenu.vb". [You can choose your 
own names, but I would recommend using these names until you are 
familiar and confident with the method.]<br><img src="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/tutorial-aspnet-1.png" alt="Screenshot 1 showing how to create the new class" class="alignnone size-full wp-image-2448" height="442" width="730"><br><img src="SmartMenus%20jQuery%20Website%20Menu%20Plugin%20%C2%BB%20Docs_files/tutorial-aspnet-2.png" alt="Screenshot 2 showing how to create the new class" class="alignnone size-full wp-image-2449" height="283" width="730"></li>
  <li>Open the class you created and paste the following code into the 
file. First clear out any code that exists in the file and paste the 
following code block in its entirety.
    <pre class="code sh_html sh_sourceCode">Imports Microsoft.VisualBasic

Partial Public Class CleanMenu
    Inherits System.Web.UI.MasterPage

    Private SitemapValue As String

    Protected Property CleanMenu() As String
        Get
            Return SitemapValue
        End Get
        Set(value As String)
            SitemapValue = value
        End Set
    End Property

    Public Sub New(ByVal NavgiationListID As String, ByVal NavigationListClass As String)
        SitemapValue = GenerateSitemap(NavgiationListID, NavigationListClass)
    End Sub

    Public Function GetCleanMenu() As String
        Return SitemapValue
    End Function

    Private Function GenerateSitemap(ByVal NavgiationListID As String, ByVal NavigationListClass As String) As String
        Dim sb As New StringBuilder
        ' Examine the RootNode, and navigate the SiteMap relative to it.

        sb.Append("<span class="sh_keyword">&lt;ul</span> <span class="sh_type">id</span><span class="sh_symbol">=</span><span class="sh_string">""" &amp; NavgiationListID &amp; """</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">""" &amp; NavigationListClass &amp; """</span><span class="sh_keyword">&gt;</span>")
        sb.Append("<span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">""" &amp; ResolveClientUrl(SiteMap.RootNode.Url) &amp; """</span><span class="sh_keyword">&gt;</span>Homepage<span class="sh_keyword">&lt;/a&gt;&lt;/li&gt;</span>")
        ' What nodes are children of the RootNode?
        If (SiteMap.RootNode.HasChildNodes) Then
            Dim rootNodesChildrenEnumerator As IEnumerator = SiteMap.RootNode.ChildNodes.GetEnumerator()
            Dim node As SiteMapNode
            While (rootNodesChildrenEnumerator.MoveNext())
                node = CType(rootNodesChildrenEnumerator.Current, SiteMapNode)
                If node.Url IsNot Nothing Then
                    sb.Append("<span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">""" &amp; ResolveClientUrl(node.Url) &amp; """</span><span class="sh_keyword">&gt;</span>" &amp; rootNodesChildrenEnumerator.Current.ToString() &amp; "<span class="sh_keyword">&lt;/a&gt;</span>" &amp; vbCrLf)
                Else
                    sb.Append("<span class="sh_keyword">&lt;li&gt;</span>" &amp; rootNodesChildrenEnumerator.Current.ToString() &amp; vbCrLf)
                End If

                sb.Append(vbTab &amp; List_Childnodes(CType(rootNodesChildrenEnumerator.Current, SiteMapNode)))
                sb.Append("<span class="sh_keyword">&lt;/li&gt;</span>")
            End While
        End If
        sb.Append("<span class="sh_keyword">&lt;/ul&gt;</span>")
        Return sb.ToString
    End Function

    Private Function List_Childnodes(Current_Node As SiteMapNode) As String
        Dim sb As New StringBuilder

        ' What nodes are children of the function parameter?
        If (Current_Node.HasChildNodes) Then
            Dim childNodesEnumerator As IEnumerator = Current_Node.ChildNodes.GetEnumerator()

            sb.Append(vbTab &amp; "<span class="sh_keyword">&lt;ul&gt;</span>")
            While (childNodesEnumerator.MoveNext())
                ' Prints the Title of each node.
                Dim node As SiteMapNode = CType(childNodesEnumerator.Current, SiteMapNode)
                sb.Append(vbTab &amp; "<span class="sh_keyword">&lt;li&gt;</span>")
                sb.Append("<span class="sh_keyword">&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">""" &amp; ResolveClientUrl(node.Url) &amp; """</span><span class="sh_keyword">&gt;</span>")
                sb.Append(childNodesEnumerator.Current.ToString())
                sb.Append("<span class="sh_keyword">&lt;/a&gt;</span>")
                ' this is how the recursion captures all child nodes                
                sb.Append(List_Childnodes(node))
                sb.Append("<span class="sh_keyword">&lt;/li&gt;</span>" &amp; vbCrLf)

            End While
            sb.Append("<span class="sh_keyword">&lt;/ul&gt;</span>" &amp; vbCrLf)
        End If

        Return sb.ToString
    End Function
End Class</pre>
    Save the class file and close it.
  </li>
  <li>In the <code>&lt;head&gt;</code> section of your MasterPage, make sure that you have the following script:
    <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;script</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/javascript"</span><span class="sh_keyword">&gt;</span>
  $(function () {
    $("#NavigationMenu").smartmenus();
  });   
<span class="sh_keyword">&lt;/script&gt;</span></pre>
    If you are using a MasterPage, you will find it useful to use this 
style of src and href definition so that any of your aspx pages not in 
the same directory as your MasterPage will load the script and link 
files correctly. Be sure that the URL is correct for your own project.
    <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;script</span> <span class="sh_type">src</span><span class="sh_symbol">=</span><span class="sh_string">"&lt;%# Page.ResolveURL("</span><span class="sh_type">~/Scripts/jquery-1.6.4.min.js</span><span class="sh_string">") %&gt;"</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/javascript"</span><span class="sh_keyword">&gt;&lt;/script&gt;</span>

<span class="sh_keyword">&lt;link</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"&lt;%# Page.ResolveURL("</span><span class="sh_type">/~Theme/redmond/jquery-ui-1.10.3.custom.min.css</span><span class="sh_string">") %&gt;"</span> <span class="sh_type">rel</span><span class="sh_symbol">=</span><span class="sh_string">"stylesheet"</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/css"</span> <span class="sh_keyword">/&gt;</span>

<span class="sh_keyword">&lt;script</span> <span class="sh_type">src</span><span class="sh_symbol">=</span><span class="sh_string">"&lt;%# Page.ResolveURL("</span><span class="sh_type">~/Smartmenu/jquery.smartmenus.min.js</span><span class="sh_string">") %&gt;"</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/javascript"</span><span class="sh_keyword">&gt;&lt;/script&gt;</span>
    
<span class="sh_keyword">&lt;link</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"&lt;%# Page.ResolveURL("</span><span class="sh_type">~/Smartmenu/sm-core-css.css</span><span class="sh_string">") %&gt;"</span> <span class="sh_type">rel</span><span class="sh_symbol">=</span><span class="sh_string">"stylesheet"</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/css"</span> <span class="sh_type">media</span><span class="sh_symbol">=</span><span class="sh_string">"screen"</span> <span class="sh_keyword">/&gt;</span>

<span class="sh_keyword">&lt;link</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"&lt;%# Page.ResolveURL("</span><span class="sh_type">~/Smartmenu/sm-blue.css</span><span class="sh_string">") %&gt;"</span> <span class="sh_type">rel</span><span class="sh_symbol">=</span><span class="sh_string">"stylesheet"</span> <span class="sh_type">type</span><span class="sh_symbol">=</span><span class="sh_string">"text/css"</span> <span class="sh_type">media</span><span class="sh_symbol">=</span><span class="sh_string">"screen"</span> <span class="sh_keyword">/&gt;</span></pre>
  </li>
  <li>In the <code>&lt;body&gt;</code> section of your MasterPage, paste
 this where you plan to have your navigation menu. It is assumed that 
you have your own plan for placement of the navigation menu on your 
page. If you are not familiar with this tag, the "asp:Literal" tag will 
"literally" paste the clean, nested, unordered list that the 
CleanMenu.vb class reads from your sitemap.
    <pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;nav&gt;</span>
  <span class="sh_keyword">&lt;asp:Literal</span> <span class="sh_type">ID</span><span class="sh_symbol">=</span><span class="sh_string">"SitemapList"</span> <span class="sh_type">runat</span><span class="sh_symbol">=</span><span class="sh_string">"server"</span><span class="sh_keyword">&gt;&lt;/asp:Literal&gt;</span>
<span class="sh_keyword">&lt;/nav&gt;</span></pre>
  </li>
  <li>In your MasterPage CodeBehind (remember, the assumed script language is VB) and paste the following code inside these subs. 
    <pre class="code sh_html sh_sourceCode">Private Sub LoadPage(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load	

    ' This makes sure that your script and link files are bound correctly in your aspx pages
    Page.Header.DataBind()

    Dim SitemapMenu = New CleanMenu("NavigationMenu", "sm sm-blue")
    Me.SitemapList.Text = SitemapMenu.GetCleanMenu
End Sub</pre>
  </li>
</ol>
<p>This is all you should need to do. Rebuild your project and test it out.</p>

<h3 id="upgrading-0-9-x">Upgrading from v0.9.x</h3>
<h4 id="upgrading-0-9-x-vanilla">Upgrading vanilla SmartMenus jQuery (used without the Bootstrap add-on)</h4>
<p>Upgrading from a 0.9.x release is possible but not completely 
painless due to the fact that a mobile first approach is used now and 
this means that your existing theme's CSS will need to updated to be 
mobile first.</p>
<p>The process would be like this:</p>
<ol>
  <li>Replace all old script files you use with the v1.0.x ones. All 
script options supported in v0.9.x are still supported in v1.0.x so you 
don't need to worry about that.</li>
  <li>Replace the core CSS file "sm-core-css.css" with the new one.</li>
  <li>Edit your theme's CSS file from the old desktop first format that 
looks like this (simplified, "sm-blue" theme is used as an example):
    <pre class="code sh_css sh_sourceCode"><span class="sh_comment">/* Your rules to style the menu in desktop view here... */</span>


<span class="sh_comment">/*</span>
<span class="sh_comment">---------------------------------------------------------------</span>
<span class="sh_comment">  Responsiveness</span>
<span class="sh_comment">  These will make the sub menus collapsible when the screen width is too small.</span>
<span class="sh_comment">---------------------------------------------------------------*/</span>


@media screen and <span class="sh_symbol">(</span>max<span class="sh_symbol">-</span>width<span class="sh_symbol">:</span> 640px<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>

	<span class="sh_comment">/* The following will make the sub menus collapsible for small screen devices (it's not recommended editing these) */</span>
	<span class="sh_value">ul.sm-blue</span>{<span class="sh_property">width:</span><span class="sh_value">auto</span> !<span class="sh_value">important</span>;<span class="sh_cbracket">}</span>
	ul<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue ul<span class="sh_cbracket">{</span><span class="sh_property">display:</span><span class="sh_value">none</span>;<span class="sh_property">position:</span><span class="sh_value">static</span> !<span class="sh_value">important</span>;<span class="sh_property">top:</span><span class="sh_value">auto</span> !<span class="sh_value">important</span>;<span class="sh_property">left:</span><span class="sh_value">auto</span> !<span class="sh_value">important</span>;<span class="sh_property">margin-left:</span><span class="sh_value">0</span> !<span class="sh_value">important</span>;<span class="sh_property">margin-top:</span><span class="sh_value">0</span> !<span class="sh_value">important</span>;<span class="sh_property">width:</span><span class="sh_value">auto</span> !<span class="sh_value">important</span>;<span class="sh_property">min-width:</span><span class="sh_value">0</span> !<span class="sh_value">important</span>;<span class="sh_property">max-width:</span><span class="sh_value">none</span> !<span class="sh_value">important</span>;<span class="sh_cbracket">}</span>
	ul<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue<span class="sh_symbol">&gt;</span>li<span class="sh_cbracket">{</span><span class="sh_property">float:</span><span class="sh_value">none</span>;<span class="sh_cbracket">}</span>
	ul<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue<span class="sh_symbol">&gt;</span>li<span class="sh_symbol">&gt;</span>a<span class="sh_symbol">,</span>ul<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue ul<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>nowrap<span class="sh_symbol">&gt;</span>li<span class="sh_symbol">&gt;</span>a<span class="sh_cbracket">{</span><span class="sh_property">white-space:</span><span class="sh_value">normal</span>;<span class="sh_cbracket">}</span>
	ul<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue iframe<span class="sh_cbracket">{</span><span class="sh_property">display:</span><span class="sh_value">none</span>;<span class="sh_cbracket">}</span>


	<span class="sh_comment">/* Your rules to style the menu in mobile view (collapsible mode) here... */</span>
}
</pre>
to a mobile first format like this:
<pre class="code sh_css sh_sourceCode"><span class="sh_comment">/* Your rules to style the menu in mobile view (collapsible mode) here... */</span>


@media <span class="sh_symbol">(</span>min<span class="sh_symbol">-</span>width<span class="sh_symbol">:</span> 768px<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>

	<span class="sh_comment">/* Switch to desktop layout</span>
<span class="sh_comment">	-----------------------------------------------</span>
<span class="sh_comment">	   These transform the menu tree from</span>
<span class="sh_comment">	   collapsible to desktop (navbar + dropdowns)</span>
<span class="sh_comment">	-----------------------------------------------*/</span>
	<span class="sh_comment">/* start... (it's not recommended editing these rules) */</span>
	<span class="sh_value">.sm-blue</span> <span class="sh_value">ul</span>{<span class="sh_property">position:</span><span class="sh_value">absolute</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue li<span class="sh_cbracket">{</span><span class="sh_property">float:</span><span class="sh_value">left</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>rtl li<span class="sh_cbracket">{</span><span class="sh_property">float:</span><span class="sh_value">right</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue ul li<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>rtl ul li<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>vertical li<span class="sh_cbracket">{</span><span class="sh_property">float:</span><span class="sh_value">none</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue a<span class="sh_cbracket">{</span><span class="sh_property">white-space:</span><span class="sh_value">nowrap</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue ul a<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>vertical a<span class="sh_cbracket">{</span><span class="sh_property">white-space:</span><span class="sh_value">normal</span>;<span class="sh_cbracket">}</span>
	<span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue <span class="sh_selector">.sm</span><span class="sh_symbol">-</span>nowrap <span class="sh_symbol">&gt;</span> li <span class="sh_symbol">&gt;</span> a<span class="sh_symbol">,</span><span class="sh_selector">.sm</span><span class="sh_symbol">-</span>blue <span class="sh_selector">.sm</span><span class="sh_symbol">-</span>nowrap <span class="sh_symbol">&gt;</span> li <span class="sh_symbol">&gt;</span> <span class="sh_symbol">:</span>not<span class="sh_symbol">(</span>ul<span class="sh_symbol">)</span> a<span class="sh_cbracket">{</span><span class="sh_property">white-space:</span><span class="sh_value">nowrap</span>;<span class="sh_cbracket">}</span>
	<span class="sh_comment">/* ...end */</span>


	<span class="sh_comment">/* Your rules to style the menu in desktop view here... */</span>
}
</pre>
<p>Of course, unfortunately, it's not as simple as just copy/pasting and
 reordering the rules and you will probably need to make further 
adjustments to your old rules since now your desktop rules will override
 your mobile rules and in v0.9.x it was the opposite.</p>
<p><strong>Tip:</strong> So if you are not using a too modified version 
of some of the v0.9.x themes (or entirely your own CSS to style the 
menus), a much easier approach would be to just copy the same theme from
 the v1.0.x release. If needed, you can now also easily modify it thanks
 to the many defined SASS variables used in the v1.0.x themes. There is 
also a link on the default demo page to edit the themes on Codepen where
 you can see a live preview as you edit the variables.</p>
  </li>
</ol>
<h4 id="upgrading-0-9-x-bootstrap">Upgrading SmartMenus jQuery + Bootstrap add-on</h4>
<p>If you are using the SmartMenus jQuery with the Bootstrap add-on, the upgrade process is very simple:</p>
<ol>
  <li>Replace the "jquery.smartmenus.js" and "jquery.smartmenus.bootstrap.js" script files you use with the v1.0.x ones.</li>
  <li>Replace the "jquery.smartmenus.bootstrap.css" CSS file with the new one.</li>
  <li>Add carets in the source to menu items that have sub menus like you can normally do in Bootstrap:
<pre class="code sh_html sh_sourceCode"><span class="sh_keyword">&lt;li&gt;&lt;a</span> <span class="sh_type">href</span><span class="sh_symbol">=</span><span class="sh_string">"#"</span><span class="sh_keyword">&gt;</span>Dropdown <span class="sh_keyword">&lt;span</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"caret"</span><span class="sh_keyword">&gt;&lt;/span&gt;&lt;/a&gt;</span>
        <span class="sh_keyword">&lt;ul</span> <span class="sh_type">class</span><span class="sh_symbol">=</span><span class="sh_string">"dropdown-menu"</span><span class="sh_keyword">&gt;</span> ...
</pre>
Due to confusion it caused to many users in the past, the Bootstrap add-on will not create SmartMenus <code>.sub-arrow</code> carets automatically any more. Instead, Bootstrap <code>.caret</code> carets can be added in the source like normally in Bootstrap now.
  </li>
</ol>

<h2 id="requirements">Requirements</h2>
<p>The script requires and fully supports jQuery 1.4.4+.</p>

<p class="docs-home-link"><a href="http://www.smartmenus.org/" class="gray-button">« Back to home page</a></p>
	
	





  <div id="docs-footer">
   <p>© Vadikom Web Ltd. 2015<br>Thanks to <a href="http://jquery.com/">jQuery</a> &amp; <a href="http://wordpress.org/">Wordpress</a>!</p>
  </div>

  </div>
 </div>
 <!-- #content end -->





</div>
<!-- #holder end -->



	
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-2061326-5', 'smartmenus.org');
  ga('send', 'pageview');

</script>

	

</body></html>
<!-- WP Fastest Cache file was created in 0.154089927673 seconds, on 09-10-15 12:32:44 Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko-->